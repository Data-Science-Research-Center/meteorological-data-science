# load_from_projects <- function(input, output, session){
#   
#   
#   
#   observeEvent(input$load_project,{
#     
#     data_select_path <- reactive({
#       path_json <- data_specific(session$userData$ID_GLOBAL_PROJECT) %>%
#         select(projectData)
#       fromJSON(txt = sprintf("%s",path_json), simplifyDataFrame = TRUE)
#     })
# 
#     data_select_title <- reactive({
#       path_json <- data_specific(session$userData$ID_GLOBAL_PROJECT) %>%
#         select(projectName)
#     })
#     
#     if(is.null(session$userData$ID_GLOBAL_PROJECT)){
# 
#       output$data_title <- renderUI({
#         h4("no datos proyecto", style = "color:red")
#       })
# 
#       return(NULL)
# 
#     }else{
# 
#       session$userData$DATA_PROJECT <- data_select_path()
#       
#       output$data_title <- renderUI({
#         req(data_select_title())
#         
#         tagList(
#           h4(data_select_title())
#         )
#       })
#       
#       output$data_from<-DT::renderDT({
#         session$userData$DATA_PROJECT %>%
#           DT::datatable(
#             extensions = "Scroller",
#             editable = "cell",
#             options = list(responsive = TRUE, scrollY = 360, scrollX =TRUE, scroller = TRUE, searching = FALSE, dom = "ftip"),
#             selection = list(mode = "single"),
#             class = "display compact",
#             rownames = FALSE
#           )
#       })
#     }
#     
#     proxyData = dataTableProxy('data_from')
#     observeEvent(input$data_from_cell_edit,{
#       info = input$data_from_cell_edit
#       i = info$row
#       j = info$col + 1
#       v = info$value
#       session$userData$DATA_PROJECT[i, j] <<- DT::coerceValue(v, session$userData$DATA_PROJECT[i, j])
#       replaceData(proxyData, session$userData$DATA_PROJECT, resetPaging = FALSE, rownames = FALSE)
#       
#     })
#     
#     
#   })
# }